{"version":3,"sources":["images/slap-ori.png","images/slap-orange.png","images/slap-cartoon.png","images/slap-green.png","images/slap-fast.png","App.js","useWebcamCapture.js","reportWebVitals.js","index.js","theme.js"],"names":["useStyles","createUseStyles","theme","background","palette","color","text","fontFamily","lineHeight","App","fontWeight","fontSize","letterSpacing","marginTop","marginBottom","padding","primary","maxWidth","minHeight","margin","textAlign","textDecoration","transform","transition","Header","cursor","listStyle","display","justifyContent","paddingLeft","paddingRight","Name","border","Main","secondary","width","height","Stickers","Gallery","Picture","position","Flex","alignContent","DownloadBtn","button","borderRadius","Share","paddingTop","ShareBtn","Readme","stickers","sticker1","sticker2","sticker3","sticker4","sticker5","map","url","img","document","createElement","src","alt","props","classes","useState","sticker","setSticker","title","setTitle","stickerImg","videoRef","setVideoRef","canvasRef","setCanvasRef","picture","setPicture","onVideoRef","useCallback","node","onCanvasRef","initialized","setInitialized","useEffect","navigator","mediaDevices","getUserMedia","video","min","ideal","max","audio","then","stream","srcObject","play","catch","err","console","log","addEventListener","onCanPlay","ev","videoWidth","videoHeight","setAttribute","removeEventListener","mousePos","useRef","x","y","startRenderLoop","requestAnimationFrame","renderFrame","ctx","getContext","getAttribute","drawImage","bb","getBoundingClientRect","current","left","top","onMouseMove","clientX","clientY","data","toDataURL","dataUri","useWebcamCapture","handleVideoRef","handleCanvasRef","handleCapture","className","to","path","exact","type","value","onChange","target","index","onClick","ref","href","download","rel","role","PinterestShareButton","media","description","PinterestIcon","size","round","FacebookShareButton","quote","hashtag","FacebookIcon","TwitterShareButton","hashtags","Sharebtn","TwitterIcon","WhatsappShareButton","WhatsappIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.977c481f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/slap-ori.5f0cd602.png\";","export default __webpack_public_path__ + \"static/media/slap-orange.b0857a2f.png\";","export default __webpack_public_path__ + \"static/media/slap-cartoon.243e7374.png\";","export default __webpack_public_path__ + \"static/media/slap-green.c7cac66f.png\";","export default __webpack_public_path__ + \"static/media/slap-fast.757dc4ff.png\";","import { useState } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { useWebcamCapture } from \"./useWebcamCapture\";\nimport { FacebookShareButton, TwitterShareButton, WhatsappShareButton, PinterestShareButton } from \"react-share\";\nimport { FacebookIcon, TwitterIcon, WhatsappIcon, PinterestIcon } from \"react-share\";\n\nimport sticker1 from './images/slap-ori.png'\nimport sticker2 from './images/slap-orange.png'\nimport sticker3 from './images/slap-cartoon.png'\nimport sticker4 from './images/slap-green.png'\nimport sticker5 from './images/slap-fast.png'\n\nimport { Link, Switch, Route, Redirect } from \"react-router-dom\";\n\nconst useStyles = createUseStyles((theme) => ({\n  '@import': \"url('https://fonts.googleapis.com/css2?family=Lobster+Two:wght@400;700&family=Open+Sans&display=swap')\",\n\n  \"@global body\": {\n    background: theme.palette.background,\n    color: theme.palette.text,\n    fontFamily: \"Open Sans\",\n    lineHeight: 1.5,\n  },\n\n  App: {\n    \"&  h2\": {\n      fontFamily: \"Lobster Two\",\n      fontWeight: \"700\",\n      fontSize: \"2rem\",\n      letterSpacing: \"1px\",\n      marginTop: \"2.5rem\",\n      marginBottom: \"1rem\",\n    },\n    padding: \"20px\",\n    background: theme.palette.primary,\n    maxWidth: \"800px\",\n    minHeight: \"600px\",\n    margin: \"auto\",\n    textAlign: \"center\",\n    \"& a\": {\n      textDecoration: \"none\",\n    },\n    \"& button:hover\": {\n      transform: \"translateY(-0.2rem)\",\n      transition: \"transform 150ms\",\n    },\n  },\n  Header: {\n    \"&  h1\": {\n      fontFamily: \"Lobster Two\",\n      cursor: \"pointer\",\n      fontSize: \"4rem\",\n      fontWeight: \"700\",\n      textAlign: \"center\",\n      margin: \"1rem auto\",\n    },\n    \"&  ul\": {\n      listStyle: \"none\",\n      display: \"flex\",\n      justifyContent: \"right\",\n      paddingLeft: \"0\",\n      marginBottom: \"2rem\",\n    },\n    \"&  li\": {\n      paddingRight: \"2rem\",\n    },\n    \"& a\": {\n      color: theme.palette.text,\n    },\n    \"& li:hover\": {\n      transform: \"translateY(-0.1rem)\",\n      transition: \"transform 150ms\",\n    },\n  },\n  Name: {\n    \"& input\": {\n      padding: \"7px\",\n      border: \"none\",\n    },\n  },\n  Main: {\n    \"& canvas\": {\n      background: theme.palette.secondary,\n      padding: \"1rem\",\n      width: \"90%\",\n      height: \"auto\",\n    },\n    \"& video\": {\n      display: \"none\",\n    },\n  },\n  Stickers: {\n    \"& img\": {\n      height: \"4rem\",\n    },\n    \"& button\": {\n      border: \"1px solid #ccc\",\n      margin: \"5px\",\n      cursor: \"pointer\",\n    },\n  },\n  Gallery: {\n    \"& img\": {\n      height: \"16rem\",\n    },\n  },\n  Picture: {\n    background: \"white\",\n    padding: \"0.5rem\",\n    position: \"relative\",\n    display: \"inline-block\",\n    \"& h3\": {\n      padding: 8,\n      textAlign: \"start\",\n      width: \"100%\",\n      margin: \"1rem 0\",\n    },\n  },\n  Flex: {\n    display: \"flex\",\n    alignContent: \"center\",\n    \"& a:hover\": {\n      transform: \"translateY(-0.2rem)\",\n      transition: \"transform 150ms\",\n    },\n  },\n  DownloadBtn: {\n    padding: \"0.75rem 2rem\",\n    background: theme.palette.button,\n    borderRadius: \"25px\",\n    color: \"white\",\n    margin: \"1rem 0\"\n  },\n  Share: {\n    textAlign: \"center\",\n    \"& p\": {\n      paddingTop: \"2rem\",\n    },\n    marginBottom: \"1rem\",\n  },\n  ShareBtn: {\n    paddingRight: \"5px\",\n  },\n  Readme: {\n    textAlign: \"left\",\n    minHeight: \"100vh\",\n  },\n}));\n\nconst stickers = [sticker1, sticker2, sticker3, sticker4, sticker5].map((url) => {\n  const img = document.createElement(\"img\");\n  img.src = url;\n  img.alt = \"a slap sticker\"\n  return { img, url };\n});\n\n\nfunction App(props) {\n  // css classes from JSS hook\n  const classes = useStyles(props);\n  // currently active sticker\n  const [sticker, setSticker] = useState();\n  // title for the picture that will be captured\n  const [title, setTitle] = useState(\"SLAPPE!\");\n\n  // webcam behavior hook\n  const [\n    handleVideoRef, // callback function to set ref for invisible video element\n    handleCanvasRef, // callback function to set ref for main canvas element\n    handleCapture, // callback function to trigger taking the picture\n    picture, // latest captured picture data object\n  ] = useWebcamCapture(sticker?.img, title);\n\n  return (\n    <div className={classes.App}>\n      <header className={classes.Header}>\n        <h1>SlapSticker</h1>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/readme\">Readme</Link>\n            </li>\n          </ul>\n        </nav>\n        <p>\n          Have you ever said something so dumb, you just wanted to slap\n          yourself? Well now you can!\n        </p>\n      </header>\n      <Switch>\n        {/* Main app route */}\n        <Route path=\"/\" exact>\n          <main>\n            <section className={classes.Name}>\n              <h2>Step 1: Give it a name</h2>\n              <input\n                type=\"text\"\n                value={title}\n                onChange={(ev) => setTitle(ev.target.value)}\n              />\n            </section>\n            <section className={classes.Stickers}>\n              <h2>Step 2: Select your sticker...</h2>\n              {stickers.map((sticker, index) =>\n                <button key={index} onClick={() => setSticker(sticker)}>\n                  <img src={sticker.url} alt=\"a slap sticker\" />\n                </button>\n              )}\n            </section>\n            <section className={classes.Main}>\n              <h2>Step 3: Slap your self!</h2>\n              <p>Click anywhere on the camera screen to capture your photo.</p>\n              <video ref={handleVideoRef} />\n              <canvas\n                ref={handleCanvasRef}\n                width={2}\n                height={2}\n                onClick={handleCapture}\n              />\n            </section>\n            <section className={classes.Gallery}>\n              {picture && (<h2>Step 4: Cherish this moment forever</h2>)}\n              {picture && (\n                <div className={classes.Picture}>\n                  <img src={picture.dataUri} alt=\"the captured selfie with the sticker\" />\n                  <div className={classes.Flex}>\n                    <h3>{picture.title}</h3>\n                    <a href={picture.dataUri} download target=\"_blank\" rel=\"noreferrer\" role=\"button\" className={classes.DownloadBtn}>Download</a>\n                  </div>\n                </div>\n              )}\n            </section>\n            <section className={classes.Share}>\n              <p>Share this app to your friends who want to slap themselves too!</p>\n              <PinterestShareButton\n                media={\"https://dissyulina.github.io/slapsticker-react/static/media/slap-ori.5f0cd602.png\"}\n                url={\"https://dissyulina.github.io/slapsticker-react/\"}\n                description={\"Have you ever said something so dumb, you just wanted to slap yourself? Well now you can! Check out SlapSticker!\"}>\n                <PinterestIcon size={40} round className={classes.ShareBtn} />\n              </PinterestShareButton>\n              <FacebookShareButton\n                url={\"https://dissyulina.github.io/slapsticker-react/\"}\n                quote={\"Check out this cool app!\"}\n                hashtag={\"#slapsticker\"}\n                description={\"Have you ever said something so dumb, you just wanted to slap yourself? Well now you can!\"}>\n                <FacebookIcon size={40} round className={classes.ShareBtn} />\n              </FacebookShareButton>\n              <TwitterShareButton\n                title={\"SlapSticker - Check out this cool app!\"}\n                url={\"https://dissyulina.github.io/slapsticker-react/\"}\n                hashtags={[\"slapsticker\", \"slapyourself\"]}\n                className={classes.Sharebtn}>\n                <TwitterIcon size={40} round className={classes.ShareBtn} />\n              </TwitterShareButton>\n              <WhatsappShareButton\n                title={\"SlapSticker - Check out this cool app!\"}\n                url={\"https://dissyulina.github.io/slapsticker-react//\"}\n                className={classes.Sharebtn}>\n                <WhatsappIcon size={40} round className={classes.ShareBtn} />\n              </WhatsappShareButton>\n            </section>\n          </main>\n        </Route>\n        {/* Readme route */}\n        <Route path=\"/readme\">\n          <main className={classes.Readme}>\n            <h2>SlapSticker Readme</h2>\n            <section>\n              <h3>What this app should do</h3>\n              <p>\n                SlapSticker is an app that lets users to slap stickers on their\n                face, using their webcam.\n              </p>\n              <p>These are the functionalities:</p>\n              <ul>\n                <li>User can pick a sticker</li>\n                <li>User can give the captured image a title</li>\n                <li>User can pick out a sticker</li>\n                <li>User can place the sticker over the webcam image</li>\n                <li>User can capture the webcam image with sticker</li>\n                <li>User can download the captured image / photo</li>\n                <li>User can share the app to the social media</li>\n              </ul>\n              <h3>Enjoy the app and have fun!</h3>\n            </section>\n          </main>\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { useCallback, useEffect, useRef, useState } from \"react\";\n\nexport const useWebcamCapture = (stickerImg, title) => {\n  const [videoRef, setVideoRef] = useState();\n  const [canvasRef, setCanvasRef] = useState();\n  const [picture, setPicture] = useState();\n\n  const onVideoRef = useCallback((node) => {\n    setVideoRef(node);\n  });\n\n  const onCanvasRef = useCallback((node) => {\n    setCanvasRef(node);\n  });\n\n  const [initialized, setInitialized] = useState(false);\n\n  useEffect(() => {\n    if (videoRef && canvasRef && !initialized) {\n      navigator.mediaDevices\n        .getUserMedia({\n          video: {\n            width: { min: 1024, ideal: 1280, max: 1920 },\n            height: { min: 576, ideal: 720, max: 1080 },\n          },\n          audio: false,\n        })\n        .then(function (stream) {\n          videoRef.srcObject = stream;\n          videoRef.play();\n        })\n        .catch(function (err) {\n          console.log(\"Couldn't start webcam: \" + err);\n        });\n\n      const onCanPlay = function (ev) {\n        const width = videoRef.videoWidth;\n        const height = videoRef.videoHeight / (videoRef.videoWidth / width);\n\n        videoRef.setAttribute(\"width\", width);\n        videoRef.setAttribute(\"height\", height);\n        canvasRef.setAttribute(\"width\", width);\n        canvasRef.setAttribute(\"height\", height);\n        videoRef.removeEventListener(\"canplay\", onCanPlay, false);\n      };\n\n      videoRef.addEventListener(\"canplay\", onCanPlay, false);\n      setInitialized(true);\n    } else if (!videoRef || !canvasRef) {\n      setInitialized(false);\n    }\n  }, [videoRef, canvasRef, initialized]);\n\n  const mousePos = useRef({ x: 0, y: 0 });\n\n  const startRenderLoop = useCallback(() => {\n    if (canvasRef && videoRef) {\n      const renderFrame = () => {\n        const ctx = canvasRef.getContext(\"2d\");\n        const width = canvasRef.getAttribute(\"width\");\n        const height = canvasRef.getAttribute(\"height\");\n        ctx.drawImage(videoRef, 0, 0, width, height);\n\n        if (stickerImg) {\n          const bb = canvasRef.getBoundingClientRect();\n          const x = ((mousePos.current.x - bb.left) / bb.width) * width;\n          const y = ((mousePos.current.y - bb.top) / bb.height) * height;\n          ctx.drawImage(\n            stickerImg,\n            x - width * 0.2,\n            y - width * 0.2,\n            width * 0.4,\n            width * 0.4\n          );\n        }\n        requestAnimationFrame(renderFrame);\n      };\n      requestAnimationFrame(renderFrame);\n    }\n  }, [canvasRef, videoRef, stickerImg]);\n\n  useEffect(() => {\n    startRenderLoop();\n  }, [startRenderLoop]);\n\n  useEffect(() => {\n    if (canvasRef) {\n      const onMouseMove = (ev) => {\n        mousePos.current = { x: ev.clientX, y: ev.clientY };\n      };\n      canvasRef.addEventListener(\"mousemove\", onMouseMove);\n      canvasRef.addEventListener(\"mousedown\", onMouseMove);\n      return () => {\n        canvasRef.removeEventListener(\"mousemove\", onMouseMove);\n        canvasRef.removeEventListener(\"mousedown\", onMouseMove);\n      };\n    }\n  }, [canvasRef]);\n\n  const onCapture = useCallback(\n    (ev) => {\n      if (canvasRef) {\n        const data = canvasRef.toDataURL(\"image/png\");\n        setPicture({ dataUri: data, title });\n      }\n    },\n    [canvasRef, title]\n  );\n\n  return [onVideoRef, onCanvasRef, onCapture, picture];\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css/normalize.css\";\nimport { ThemeProvider } from \"react-jss\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { theme } from \"./theme\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/slapsticker-react\">\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","export const theme = {\n  palette: {\n    primary: \"#FAF0E6\",\n    secondary: \"#7698B3\",\n    button: \"#ED6A5E\",\n    text: \"#202030\",\n  },\n};\n"],"sourceRoot":""}